# flake8: noqa

"""
    Purplship API

     ## API Reference  Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services.  The Purplship API is organized around REST. Our API has predictable resource-oriented URLs, accepts JSON-encoded  request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  The Purplship API differs for every account as we release new versions. These docs are customized to your version of the API.   ## Versioning  When backwards-incompatible changes are made to the API, a new, dated version is released.  The current version is `2021.7`.   Read our API changelog and to learn more about backwards compatibility.  As a precaution, use API versioning to check a new API version before committing to an upgrade.   ## Pagination  All top-level API resources have support for bulk fetches via \"list\" API methods. For instance, you can list addresses,  list shipments, and list trackers. These list API methods share a common structure, taking at least these  two parameters: limit, and offset.  Purplship utilizes offset-based pagination via the offset and limit parameters. Both parameters take a number as value (see below) and return objects in reverse chronological order.  The offset parameter returns objects listed after an index.  The limit parameter take a limit on the number of objects to be returned from 1 to 100.   ```json {     \"next\": \"/v1/shipments?limit=25&offset=25\",     \"previous\": \"/v1/shipments?limit=25&offset=25\",     \"results\": [     ] } ```  ## Environments  The Purplship API offer the possibility to create and retrieve certain objects in `test_mode`. In development, it is therefore possible to add carrier connections, get live rates,  buy labels, create trackers and schedule pickups in `test_mode`.    # noqa: E501

    The version of the OpenAPI document: 2021.7
    Contact: hello@purplship.com
    Generated by: https://openapi-generator.tech
"""


__version__ = "2021.7"

import typing

# import ApiClient
from purplship.api_client import ApiClient

# import Configuration
from purplship.configuration import Configuration

# import exceptions
from purplship.exceptions import OpenApiException
from purplship.exceptions import ApiAttributeError
from purplship.exceptions import ApiTypeError
from purplship.exceptions import ApiValueError
from purplship.exceptions import ApiKeyError
from purplship.exceptions import ApiException

# import apis into sdk package
from purplship.api.api_api import APIApi
from purplship.api.addresses_api import AddressesApi
from purplship.api.carriers_api import CarriersApi
from purplship.api.customs_api import CustomsApi
from purplship.api.parcels_api import ParcelsApi
from purplship.api.pickups_api import PickupsApi
from purplship.api.proxy_api import ProxyApi
from purplship.api.shipments_api import ShipmentsApi
from purplship.api.trackers_api import TrackersApi
from purplship.api.webhooks_api import WebhooksApi


api_key = None
api_key_prefix = 'Token'
host = None
api_client = None
configuration = Configuration()


def init_client():
    global api_client
    global configuration
    if (api_client is not None) and (configuration.host == host) \
            and (configuration.api_key['Authorization'] == f'{api_key_prefix} {api_key}'):
        return api_client

    configuration = Configuration()
    configuration.host = host
    configuration.api_key['Authorization'] = f'{api_key_prefix} {api_key}'
    api_client = ApiClient(configuration)

    return api_client


def define_api(api_class: typing.Type):
    class _API(api_class):
        def __init__(self):
            pass

        def __getattribute__(self, item):
            return getattr(api_class(init_client()), item)

    return _API()


API = define_api(APIApi)
Addresses = define_api(AddressesApi)
Carriers = define_api(CarriersApi)
Customs = define_api(CustomsApi)
Parcels = define_api(ParcelsApi)
Pickups = define_api(PickupsApi)
Proxy = define_api(ProxyApi)
Shipments = define_api(ShipmentsApi)
Trackers = define_api(TrackersApi)
Webhooks = define_api(WebhooksApi)
